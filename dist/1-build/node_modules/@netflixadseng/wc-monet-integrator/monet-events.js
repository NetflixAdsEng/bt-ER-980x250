/**
 *  monet-events.js
 *
 *  This script is intended for Google Web Designer implementations, however it can work with JS frameworks.
 *
 *  It connects click events to Monet's Exit_URL from a default GWD Tap Area component & the Netflix CTA.
 *
 *  For JS integrations, you should set `exit-element-id` on MonetIntegrator to reference
 *  an element that serves as your click-through button. It should dispatch a 'click' event.
 *
 */
(function() {
  'use strict';

  var monetIntegrator;
  var ctaButtons;
  var exitURL;
  var adWrapper;
  var tapArea;
  var videoElements;

  window.addEventListener('MonetAdReady', function() {
    queryDOM();
    if (monetIntegrator) {
      addExitEvents();
      if (monetIntegrator.hasAttribute('ready')) {
        parseMonetData();
      } else {
        monetIntegrator.addEventListener('ready', parseMonetData);
      }
    }
  });

  function queryDOM() {
    monetIntegrator = document.querySelector('monet-integrator');
    videoElements = document.getElementsByTagName('netflix-video');
    ctaButtons = document.getElementsByTagName('netflix-cta');
    adWrapper = document.querySelector('.gwd-page-content');
  }

  function parseMonetData() {
    monetIntegrator
      .getMonetData()
      .then(function(data) {
        exitURL = data.rootAssets['url.Exit_URL'].url;
      })
      .catch(function(e) {
        console.error('Error loading data', e);
      });
  }

  function addExitEvents() {
    // !!!! this is checking for a Tap Area button and sets it up to exit !!!!
    var defaultTapAreaId = monetIntegrator.getExitElementId() || 'gwd-taparea_1';
    tapArea = document.getElementById(defaultTapAreaId);
    if (tapArea) {
      tapArea.addEventListener('click', onBannerButtonClick, true);
    } else {
      console.error(
        'No exit element was found with id: "' +
          defaultTapAreaId +
          '". This can be defined on MonetIntegrator "exit-element-id". It should correspond with an element that dispatches a "click" event.'
      );
    }

    // !!! this is checking for any cta-buttons and assigning the click events to them !!!!
    if (ctaButtons) {
      for (var i = 0; i < ctaButtons.length; i++) {
        var button = ctaButtons[i].querySelector('.button');
        button.addEventListener('click', onCtaButtonClick, true);
      }
    }
  }

  function onBannerButtonClick(e) {
    exitBanner('banner_button');
  }

  function onCtaButtonClick() {
    exitBanner('cta_button');
  }

  function exitBanner(eventSource) {
    logMonetEvent('CLICK', { src: eventSource });
    pauseVideos();
    if (exitURL) {
      Enabler.exitOverride('exit_banner', exitURL);
      logMonetEvent('AD_EXIT', { url: exitURL });
    } else {
      Enabler.exit('clickTag');
      logMonetEvent('AD_EXIT', { url: 'Exit via ad platform' });
    }
  }

  function pauseVideos() {
    for (var i = 0; i < videoElements.length; i++) {
      var video = videoElements[i];
      if (video) video.pause();
    }
  }

  function logMonetEvent(eventType, eventData) {
    if (monetIntegrator) {
      monetIntegrator.logEvent(eventType, eventData);
    }
  }

  var domReady = new CustomEvent('MonetAdReady');
  if (/comp|inter|loaded/.test(document.readyState)) {
    window.dispatchEvent(domReady);
  } else {
    document.addEventListener('DOMContentLoaded', function() {
      window.dispatchEvent(domReady);
    });
  }
})();
